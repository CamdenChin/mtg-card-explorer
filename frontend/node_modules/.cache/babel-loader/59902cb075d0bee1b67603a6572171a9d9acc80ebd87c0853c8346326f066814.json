{"ast":null,"code":"var _jsxFileName = \"/Users/camdenchin/Desktop/goldfisher/mtg-card-explorer/frontend/src/components/PaginatedCards.js\",\n  _s = $RefreshSig$();\n// src/components/PaginatedCards.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardList from './CardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaginatedCards({\n  searchTerm\n}) {\n  _s();\n  // Accept searchTerm as a prop\n  const [cards, setCards] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchCards = async () => {\n    setIsLoading(true);\n\n    // Log the search term before making the request\n    console.log(`Fetching cards for searchTerm: ${searchTerm}`);\n    try {\n      const response = await axios.get(`http://localhost:5001/api/cards?name=${searchTerm}`);\n\n      // Log the response data to verify the fetched cards\n      console.log('Cards received:', response.data.data);\n      setCards(response.data.data); // Completely replaces the old data\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch cards:', error);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCards();\n  }, [searchTerm]); // Re-fetch when searchTerm changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(PaginatedCards, \"+2GY14/p5QCbNKtEiq6QNmQlcMU=\");\n_c = PaginatedCards;\nexport default PaginatedCards;\nvar _c;\n$RefreshReg$(_c, \"PaginatedCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","CardList","jsxDEV","_jsxDEV","PaginatedCards","searchTerm","_s","cards","setCards","currentPage","setCurrentPage","isLoading","setIsLoading","fetchCards","console","log","response","get","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/camdenchin/Desktop/goldfisher/mtg-card-explorer/frontend/src/components/PaginatedCards.js"],"sourcesContent":["// src/components/PaginatedCards.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardList from './CardList';\n\nfunction PaginatedCards({ searchTerm }) { // Accept searchTerm as a prop\n    const [cards, setCards] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const fetchCards = async () => {\n        setIsLoading(true);\n\n        // Log the search term before making the request\n        console.log(`Fetching cards for searchTerm: ${searchTerm}`);\n\n        try {\n            const response = await axios.get(`http://localhost:5001/api/cards?name=${searchTerm}`);\n            \n            // Log the response data to verify the fetched cards\n            console.log('Cards received:', response.data.data);\n\n            setCards(response.data.data); // Completely replaces the old data\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Failed to fetch cards:', error);\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchCards();\n    }, [searchTerm]); // Re-fetch when searchTerm changes\n\n    return (\n        <div>\n            <CardList cards={cards} />\n            {isLoading ? <p>Loading...</p> : null}\n        </div>\n    );\n}\n\nexport default PaginatedCards;\n\n\n\n\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,cAAcA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAAE;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3BD,YAAY,CAAC,IAAI,CAAC;;IAElB;IACAE,OAAO,CAACC,GAAG,CAAC,kCAAkCV,UAAU,EAAE,CAAC;IAE3D,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,wCAAwCZ,UAAU,EAAE,CAAC;;MAEtF;MACAS,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAElDV,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MAC9BN,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CP,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZc,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,oBACIF,OAAA;IAAAiB,QAAA,gBACIjB,OAAA,CAACF,QAAQ;MAACM,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzBb,SAAS,gBAAGR,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd;AAAClB,EAAA,CAnCQF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}